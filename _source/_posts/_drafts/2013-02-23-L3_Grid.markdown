---
layout: project
category: projects
title: L3 Grid
tags:
- Webdesign
- .sass
git: https://github.com/l3kn/sass-grid
---
# Ein responsives css-Gridsystem in `.sass` 

Was sogenannte Gridsysteme sind habe ich [hier](http://localhost:4000/blog/2013/02/17/CSS_Gridlayouts_1.html) kurz beschrieben.

<!-- break -->

## Parameter

In der `.sass` Datei können noch einige Parameter gesetzt werden:

`$col_count:` **Anzahl der Columns** *(default ist 12)*  
`$col_padding:` **Innenabstand in den Columns** *(in %, default ist 1%)*  
`$col_gutter:` **Abstand der Columns untereinander** *(in px, default ist 10px)*  

## Hauptklassen

L3 Grid besteht aus den 2 Hauptklassen `.row`*(horizontale Unterteilung)* und `.col[1..n]`*(vertikale Unterteilung)*.

### Columns

`.col`s gibt es in **n** verschiedenen Breiten, ist **n** z.B. 4 wäre 
> `.col1` 25% breit  
> `.col2` 50% breit  
> `.col3` 75% breit  
> `.col4` 100% breit  

### Row

In einer `.row` können mehrere `.col`s positioniert werden, dabei sollte jedoch beachtet werde, dass die Gesamtbreite 100% nicht übersteigt. Mögliche Unterteilungen bei **n = 4** wären
> 4 x `.col1`  
> 2 x `.col2`  
> 1 x `.col4`  
> 2 x `.col1` & 1 x `.col2`  
> usw.

~~~ html
<div class="row">
	<div class="col1">
		// Content
	</div>
	<div class="col2">
		// Content
	</div>
	<div class="col1">
		// Content
	</div>
</div>
~~~

## Weitere Klassen

### Offsets

auch `.offset`s gibt es in **n** verschiedenen Breiten.

Um eine einzelne `.col2` im oben gewählten Beispiel mittig zu positionieren müsste ihr die Klasse `.offset1` angehängt werden

~~~ html
<div class="row">
	<div class="col2 offset1">
		// Content
	</div>
</div>
~~~

### Mobile

Zusätzlich gibt es zwei Klassen, die nur angewandt werden, wenn die Fensterbreite **<= 600px** ist (Smartphone oder Tablet)
`.m-hidden` unde `.m-full`.

`.m-hidden` kann Elementen angehängt werden, die auf mobilen Geräten nicht dargestellt werden sollen

{% highlight html %}

<h1 class="m-hidden">
	Dein Fenster ist breiter als 600px
</h1>

{% endhighlight %}

`.col`s, die auf mobilen Geräten zu schmal wären, kann `.m-full` angehängt werden, damit sie auf mobilen Geräten mit einer Breite von **100%** dargestellt werden

~~~ html
<div class="row">
	<div class="col1 m-full">
	</div>
	<div class="col1 m-full">
	</div>
	<div class="col1 m-full">
	</div>
	<div class="col1 m-full">
	</div>			
</div>
~~~

### Helferklassen

Eine weitere verfügbare Klasse ist `.cf`, eine `.sass` Umsetzung des [micro-clearfix hacks](http://nicolasgallagher.com/micro-clearfix-hack/), diese ist jedoch schon in allen `.col`s enthalten ;)
