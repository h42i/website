<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>HaSi e.V.</title>
        <description>Dein Hackspace in Siegen</description>
        <link>http://www.hasi.it</link>
        <atom:link href="http://www.hasi.it/feed.xml" rel="self" type="application/rss+xml" />
        
            <item>
                <title>Scratch – Grafisches Programmieren von Kindesbeinen an</title>
                <description>&lt;p&gt;Scratch ist eine noch relativ neue, leicht zu erlernende, grafisch orientierte 
Programmiersprache für Einsteiger. Unter dem Motto “Ausdenken, Programmieren,
Mitteilen” werden eigene Spiele, Steuerungen und Multimediaanwendungen möglich. 
Damit bringt Scratch besonders Kindern und Jugendlichen frühzeitig 
Programmiertechniken spielerisch nahe. Scratch gibt es kostenlos für Windows, 
Mac OS X sowie Linux. In der weltweiten Scratch-Community gibt es inzwischen 
über 3 Millionen “Apps” von rund 1,5 Millionen registrierten Scratch-Usern.&lt;/p&gt;
</description>
                <pubDate>Thu, 23 May 2013 00:00:00 +0200</pubDate>
                <link>http://www.hasi.ittalk/2013/05/23/Scratch.html</link>
                <guid isPermaLink="true">http://www.hasi.ittalk/2013/05/23/Scratch.html</guid>
            </item>
        
            <item>
                <title>Guidelines</title>
                <description>&lt;h2 id=&quot;philosophie--meta&quot;&gt;Philosophie / Meta&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Alle verwendeten Tools sollten Open-Source sein  &lt;/li&gt;
  &lt;li&gt;Responsive Design -&amp;gt; keine Breitenangaben in &lt;strong&gt;px&lt;/strong&gt;, immer &lt;strong&gt;%&lt;/strong&gt; oder &lt;strong&gt;em&lt;/strong&gt;  &lt;/li&gt;
  &lt;li&gt;Mobile first -&amp;gt; Das Stylesheet b ezieht sich auf die Version für Mobilgeräte,
alle Anpassungen für breitere Bildschirme finden in den media-queries am Ende 
der Datei statt  &lt;/li&gt;
  &lt;li&gt;Ändert mal die breite eures Browserfensters, um zu sehen, warum der oben 
gewählte Ansatz sinnvoll ist.  &lt;/li&gt;
  &lt;li&gt;Flat UI, möglichst keine Schatten oder Farbverläufe.  &lt;/li&gt;
  &lt;li&gt;Sauberer Quellcode, “Hacks” wie die &lt;em&gt;.group&lt;/em&gt;-Kalsse sollten erklärt werden.  &lt;/li&gt;
  &lt;li&gt;redundater Code sollte vermieden werden -&amp;gt; includes Verwendern  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;grab-the-tools&quot;&gt;Grab the tools&lt;/h2&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot; title=&quot;double click to toggle&quot; ondblclick=&quot;with (this.firstChild.style) { display = (display == &#39;&#39;) ? &#39;none&#39; : &#39;&#39; }&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;$paketmanager $install ruby rubygems
gem install jekyll sass jekyll-assets yui-compressor coderay kramdown
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Jekyll - Rubybasierter static site generator  &lt;/li&gt;
  &lt;li&gt;Kramdown - ein Markdown superset (sowas wie LaTeX, nur einfacher)&lt;/li&gt;
  &lt;li&gt;Sass - CSS-Preprocessor, -Syntax +Variablen +fancy Funktionen&lt;/li&gt;
  &lt;li&gt;Coderay - Syntax Highlighting&lt;/li&gt;
  &lt;li&gt;jekyll-assets - eine Asset-Pipeline für Jekyll&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;get-the-git&quot;&gt;Get the git&lt;/h2&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot; title=&quot;double click to toggle&quot; ondblclick=&quot;with (this.firstChild.style) { display = (display == &#39;&#39;) ? &#39;none&#39; : &#39;&#39; }&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;git clone ssh://h42i@hasi.it/home/hasi/git/jekyll.git
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h2 id=&quot;befehle&quot;&gt;Befehle&lt;/h2&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot; title=&quot;double click to toggle&quot; ondblclick=&quot;with (this.firstChild.style) { display = (display == &#39;&#39;) ? &#39;none&#39; : &#39;&#39; }&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;jekyll serve --watch
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Startet einen Webserver auf Port 4000 und generiert die Seite nach Änderungen 
automatisch neu&lt;/p&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot; title=&quot;double click to toggle&quot; ondblclick=&quot;with (this.firstChild.style) { display = (display == &#39;&#39;) ? &#39;none&#39; : &#39;&#39; }&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;jekyll build
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Wie oben, nur nicht automatisch und ohne Webserver ;)&lt;/p&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot; title=&quot;double click to toggle&quot; ondblclick=&quot;with (this.firstChild.style) { display = (display == &#39;&#39;) ? &#39;none&#39; : &#39;&#39; }&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;git commit -am &#39;$Beschreibung&#39;
git push
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Um die Änderungen auf den Server hochzuladen, sollte nach 5sec sichtbar sein.&lt;/p&gt;

&lt;p&gt;Wenn das Ganze am Anfang nicht klappt hilft ein einmaliges&lt;/p&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot; title=&quot;double click to toggle&quot; ondblclick=&quot;with (this.firstChild.style) { display = (display == &#39;&#39;) ? &#39;none&#39; : &#39;&#39; }&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;git push origin master
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h2 id=&quot;aufbau&quot;&gt;Aufbau&lt;/h2&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot; title=&quot;double click to toggle&quot; ondblclick=&quot;with (this.firstChild.style) { display = (display == &#39;&#39;) ? &#39;none&#39; : &#39;&#39; }&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;
&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;
&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;
&lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;
&lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;
&lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;
&lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;
&lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;
&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;
&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;
&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;
&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;
&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;
&lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;
&lt;a href=&quot;#n16&quot; name=&quot;n16&quot;&gt;16&lt;/a&gt;
&lt;a href=&quot;#n17&quot; name=&quot;n17&quot;&gt;17&lt;/a&gt;
&lt;a href=&quot;#n18&quot; name=&quot;n18&quot;&gt;18&lt;/a&gt;
&lt;a href=&quot;#n19&quot; name=&quot;n19&quot;&gt;19&lt;/a&gt;
&lt;strong&gt;&lt;a href=&quot;#n20&quot; name=&quot;n20&quot;&gt;20&lt;/a&gt;&lt;/strong&gt;
&lt;a href=&quot;#n21&quot; name=&quot;n21&quot;&gt;21&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;.
├── _config.yml - Konfigurationsdatei, z.B. für die Menüstruktur
├── _source - Quelldateien
|    ├── _assets
|    |   ├── stylesheets
|    |    |   ├── main.sass - Hauptstylesheet
|    |    |   └── icons.sass, normalize.css - don&#39;t touch this!
|    |   ├── images - alle Bilder kommen hier rein
|    |   └── fonts
|    ├── _includes - Code snippets die häufig verwendet werden
|    |   └── ...
|    ├── _layouts - Layouts, werden im header einer Datei definiert
|    |   ├── default.html - Layout der gesamten Seite 
|    |   └── post.html - Layout für die Seite eines Blogposts
|    ├── _posts
|    |   ├── YYYY-MM-DD-Name_mit_underscores_statt_spaces.markdown
|    |   └── YYYY-MM-DD-Anderer_Beitrag
|    ├── index.html - Startseite
|    └── $name - z.B. hasi.it/blog/
|        └── index.html - Unterseite
└── _site - Zielverzeichnis, don&#39;t touch this!
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h2 id=&quot;docs&quot;&gt;Docs&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home/&quot;&gt;Jekyll&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://kramdown.rubyforge.org/&quot;&gt;Kramdown&lt;/a&gt;  &lt;/p&gt;

&lt;h2 id=&quot;misc-info&quot;&gt;Misc. Info&lt;/h2&gt;

&lt;p&gt;Markdown tut manchmal komische Dinge, Zeilenumbrüche werden mit 2x Space am Ende
der Zeile erzeugt.&lt;/p&gt;
</description>
                <pubDate>Thu, 23 May 2013 00:00:00 +0200</pubDate>
                <link>http://www.hasi.itblog/2013/05/23/Guidelines.html</link>
                <guid isPermaLink="true">http://www.hasi.itblog/2013/05/23/Guidelines.html</guid>
            </item>
        
            <item>
                <title>Erklär mir Kunst</title>
                <description>&lt;p&gt;Hybr1s ist Regisseur bei der Theatergruppe tollMut. Am 30. Mai 2013 hat er versucht, Kunst zu erklären:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ist das Kunst oder kann das weg?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kunst ist langweilig, unverständlich, bringt doch nichts!
Ob Liebhaber oder Banause – Kunst polarisiert.&lt;/p&gt;

&lt;!-- break --&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube-nocookie.com/embed/S9QcOZX256g?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
                <pubDate>Thu, 23 May 2013 00:00:00 +0200</pubDate>
                <link>http://www.hasi.ittalk/2013/05/23/Erklaer_mir_Kunst.html</link>
                <guid isPermaLink="true">http://www.hasi.ittalk/2013/05/23/Erklaer_mir_Kunst.html</guid>
            </item>
        
    </channel>
</rss>